{"version":3,"sources":["components/ToDoContext.tsx","ToDo/ToDo.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ACTIONS","FILTER","reducer","state","action","type","SET_LIST","list","payload","SET_VISIBLE_LIST","visibleList","SET_SEARCH_VALUE","searchValue","SORT","sortBy","SET_TODO","selectedTodo","InitialState","ALL","StateContext","React","createContext","DispatchContext","_action","ToDoProvider","children","useReducer","dispatch","Provider","value","ToDoItem","todo","useState","isButtonPressed","setIsButtonPressed","useContext","className","id","completed","classNames","title","onClick","TodoList","todos","map","TodoFilter","input","setInput","setDelayedInput","toLowerCase","applyDelayedInput","useCallback","debounce","onChange","e","target","onSelectHandler","placeholder","inputSearchHandler","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","userState","setUserState","isLoading","setIsLoading","useEffect","userId","catch","err","finally","href","name","App","needLoader","setNeedLoader","filterTodos","todoslist","COMPLITED","filter","ACTIVE","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d24aed68.chunk.js","sourcesContent":["import React, {\n  useReducer,\n} from 'react';\nimport { Todo } from '../types/Todo';\n\nexport enum ACTIONS {\n  SET_LIST = 'setList',\n  SET_VISIBLE_LIST = 'setVisibleList',\n  SET_SEARCH_VALUE = 'setSearchValue',\n  SORT = 'sortBy',\n  SET_TODO = 'setTodo',\n}\n\nexport enum FILTER {\n  SEARCH = 'Search',\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLITED = 'completed',\n}\n\ntype Action = { type: ACTIONS.SET_LIST, payload: Todo[] }\n| { type: ACTIONS.SET_VISIBLE_LIST, payload: Todo[] }\n| { type: ACTIONS.SET_SEARCH_VALUE, payload: string }\n| { type: ACTIONS.SET_TODO, payload: Todo }\n| { type: ACTIONS.SORT, payload: string };\n\ninterface State {\n  list: Todo[],\n  visibleList: Todo[],\n  sortBy: string,\n  searchValue: string,\n  selectedTodo: Todo,\n}\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case ACTIONS.SET_LIST:\n      return {\n        ...state,\n        list: action.payload,\n      };\n    case ACTIONS.SET_VISIBLE_LIST:\n      return {\n        ...state,\n        visibleList: action.payload,\n      };\n    case ACTIONS.SET_SEARCH_VALUE:\n      return {\n        ...state,\n        searchValue: action.payload,\n      };\n    case ACTIONS.SORT:\n      return {\n        ...state,\n        sortBy: action.payload,\n      };\n    case ACTIONS.SET_TODO:\n      return {\n        ...state,\n        selectedTodo: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n\nconst InitialState: State = {\n  list: [],\n  visibleList: [],\n  sortBy: FILTER.ALL,\n  searchValue: '',\n  selectedTodo: {} as Todo,\n};\n\nexport const StateContext = React.createContext(InitialState);\n// disabling warning defined but never used\n/* eslint-disable */\nexport const DispatchContext = React.createContext((_action: Action) => { });\n/* eslint-enable */\nexport const ToDoProvider: React.FC<Props> = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, InitialState);\n\n  return (\n    <DispatchContext.Provider value={dispatch}>\n      <StateContext.Provider value={state}>\n        {children}\n      </StateContext.Provider>\n    </DispatchContext.Provider>\n  );\n};\n","import { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../types/Todo';\nimport {\n  ACTIONS,\n  DispatchContext,\n  StateContext,\n} from '../components/ToDoContext';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const ToDoItem: React.FC<Props> = ({ todo }) => {\n  const [isButtonPressed, setIsButtonPressed] = useState(false);\n  const dispatch = useContext(DispatchContext);\n  const { selectedTodo } = useContext(StateContext);\n\n  function selectUser() {\n    dispatch({ type: ACTIONS.SET_TODO, payload: todo });\n    setIsButtonPressed(!isButtonPressed);\n  }\n\n  return (\n    <tr data-cy=\"todo\" className=\"\">\n      <td className=\"is-vcentered\">{todo.id}</td>\n      {todo.completed ? (\n        <td className=\"is-vcentered\">\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </td>\n      ) : (\n        <td className=\"is-vcentered\" />\n      )}\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-success': todo.completed === true,\n          'has-text-danger': todo.completed === false,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={selectUser}\n        >\n          <span className=\"icon\">\n            <i className={classNames('far fa-eye', {\n              'far fa-eye fa-eye-slash': selectedTodo.id,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { ToDoItem } from '../../ToDo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n\n        {todos.map(todo => <ToDoItem todo={todo} key={todo.id} />)}\n\n      </tbody>\n    </table>\n  );\n};\n","import debounce from 'lodash.debounce';\nimport { useCallback, useContext, useState } from 'react';\nimport {\n  ACTIONS,\n  DispatchContext,\n} from '../ToDoContext';\n\nexport const TodoFilter = () => {\n  const [input, setInput] = useState('');\n  const dispatch = useContext(DispatchContext);\n\n  function onSelectHandler(e: React.ChangeEvent<HTMLSelectElement>) {\n    dispatch({ type: ACTIONS.SORT, payload: e.target.value });\n  }\n\n  function setDelayedInput(value: string) {\n    dispatch({ type: ACTIONS.SET_SEARCH_VALUE, payload: value.toLowerCase() });\n  }\n\n  const applyDelayedInput = useCallback(debounce(setDelayedInput, 1000), []);\n\n  function inputSearchHandler(e: React.ChangeEvent<HTMLInputElement>) {\n    setInput(e.target.value);\n    applyDelayedInput(e.target.value.toLowerCase());\n  }\n\n  function clearInput() {\n    setInput('');\n    setDelayedInput('');\n  }\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={(e) => onSelectHandler(e)}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          value={input}\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={(e) => inputSearchHandler(e)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {input.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearInput}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { StateContext, ACTIONS, DispatchContext } from '../ToDoContext';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useContext(DispatchContext);\n  const { selectedTodo } = useContext(StateContext);\n  const [userState, setUserState] = useState({} as User);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function closeTodoModal() {\n    dispatch({ type: ACTIONS.SET_TODO, payload: {} as Todo });\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(selectedTodo.userId)\n      .then((res) => setUserState(res))\n      .catch((err) => {\n        throw err;\n      })\n      .finally(() => setIsLoading(false));\n\n    return () => {\n      setUserState({} as User);\n    };\n  }, [selectedTodo.id]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeTodoModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userState.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, {\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport {\n  StateContext,\n  DispatchContext,\n  ACTIONS,\n  FILTER,\n} from './components/ToDoContext';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const { visibleList, sortBy, searchValue } = useContext(StateContext);\n  const dispatch = useContext(DispatchContext);\n  const [needLoader, setNeedLoader] = useState(false);\n\n  const { selectedTodo } = useContext(StateContext);\n\n  function filterTodos(todoslist: Todo[]): Todo[] {\n    switch (sortBy) {\n      case FILTER.ALL:\n        return [...todoslist];\n      case FILTER.COMPLITED:\n        return [...todoslist.filter(todo => todo.completed)];\n      case FILTER.ACTIVE:\n        return [...todoslist.filter(todo => !todo.completed)];\n      default:\n        return todoslist;\n    }\n  }\n\n  const getVisibleTodos = () => {\n    if (searchValue.length > 0) {\n      const temp = visibleList.filter(\n        todo => todo.title.toLowerCase().includes(searchValue.toLowerCase()),\n      );\n\n      return filterTodos(temp);\n    }\n\n    return filterTodos(visibleList);\n  };\n\n  useEffect(() => {\n    setNeedLoader(true);\n    getTodos()\n      .then(res => {\n        dispatch({ type: ACTIONS.SET_LIST, payload: res });\n        dispatch({ type: ACTIONS.SET_VISIBLE_LIST, payload: res });\n      })\n      .finally(() => setNeedLoader(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {/* <Loader /> */}\n              {needLoader && (<Loader />)}\n              <TodoList todos={getVisibleTodos()} />\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo.id && (<TodoModal key={selectedTodo.id} />)}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { ToDoProvider } from './components/ToDoContext';\n\nReactDOM.render(\n  <ToDoProvider>\n    <App />\n  </ToDoProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}